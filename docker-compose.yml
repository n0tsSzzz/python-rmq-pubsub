services:
  rabbitmq:
    image: rabbitmq:4-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cassandra:
    image: cassandra:4
    ports:
      - "9042:9042"
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES'" ]
      interval: 10s
      timeout: 5s
      retries: 10

  cassandra_migrations:
    image: cassandra:4
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./migrations/00001.init.up.cql:/init.cql
    restart:
      on-failure
    command: cqlsh -f /init.cql
    environment:
      CQLSH_HOST: cassandra

  subscriber1:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - configs/subscriber1.env
    command: "uv run python subscriber/subscriber.py"
    restart: on-failure
    depends_on:
      - rabbitmq
      - cassandra
      - cassandra_migrations

  subscriber2:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - configs/subscriber2.env
    command: "uv run python subscriber/subscriber.py"
    restart: on-failure
    depends_on:
      - rabbitmq
      - cassandra
      - cassandra_migrations

  publisher:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - configs/publisher.env
    command: "uv run python publisher/publisher.py"
    restart: on-failure
    depends_on:
      - rabbitmq
      - cassandra
      - cassandra_migrations